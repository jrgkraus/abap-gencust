*---------------------------------------------------------------------*
*    view related FORM routines
*---------------------------------------------------------------------*
*...processing: ZVI_GENCUSTIT...................................*
FORM GET_DATA_ZVI_GENCUSTIT.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZDB_GENCUSTIT WHERE
(VIM_WHERETAB) .
    CLEAR ZVI_GENCUSTIT .
ZVI_GENCUSTIT-MANDT =
ZDB_GENCUSTIT-MANDT .
ZVI_GENCUSTIT-PURPOSE =
ZDB_GENCUSTIT-PURPOSE .
ZVI_GENCUSTIT-ORG_LEVEL =
ZDB_GENCUSTIT-ORG_LEVEL .
ZVI_GENCUSTIT-KEY_VALUE =
ZDB_GENCUSTIT-KEY_VALUE .
ZVI_GENCUSTIT-VALID_FROM =
ZDB_GENCUSTIT-VALID_FROM .
ZVI_GENCUSTIT-USERNAME =
ZDB_GENCUSTIT-USERNAME .
ZVI_GENCUSTIT-COUNTER =
ZDB_GENCUSTIT-COUNTER .
ZVI_GENCUSTIT-VALUE =
ZDB_GENCUSTIT-VALUE .
ZVI_GENCUSTIT-INACTIVE =
ZDB_GENCUSTIT-INACTIVE .
ZVI_GENCUSTIT-DESCRIPTION =
ZDB_GENCUSTIT-DESCRIPTION .
<VIM_TOTAL_STRUC> = ZVI_GENCUSTIT.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZVI_GENCUSTIT .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZVI_GENCUSTIT.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZVI_GENCUSTIT-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZDB_GENCUSTIT WHERE
  PURPOSE = ZVI_GENCUSTIT-PURPOSE AND
  ORG_LEVEL = ZVI_GENCUSTIT-ORG_LEVEL AND
  KEY_VALUE = ZVI_GENCUSTIT-KEY_VALUE AND
  VALID_FROM = ZVI_GENCUSTIT-VALID_FROM AND
  USERNAME = ZVI_GENCUSTIT-USERNAME AND
  COUNTER = ZVI_GENCUSTIT-COUNTER .
    IF SY-SUBRC = 0.
    DELETE ZDB_GENCUSTIT .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZDB_GENCUSTIT WHERE
  PURPOSE = ZVI_GENCUSTIT-PURPOSE AND
  ORG_LEVEL = ZVI_GENCUSTIT-ORG_LEVEL AND
  KEY_VALUE = ZVI_GENCUSTIT-KEY_VALUE AND
  VALID_FROM = ZVI_GENCUSTIT-VALID_FROM AND
  USERNAME = ZVI_GENCUSTIT-USERNAME AND
  COUNTER = ZVI_GENCUSTIT-COUNTER .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZDB_GENCUSTIT.
    ENDIF.
ZDB_GENCUSTIT-MANDT =
ZVI_GENCUSTIT-MANDT .
ZDB_GENCUSTIT-PURPOSE =
ZVI_GENCUSTIT-PURPOSE .
ZDB_GENCUSTIT-ORG_LEVEL =
ZVI_GENCUSTIT-ORG_LEVEL .
ZDB_GENCUSTIT-KEY_VALUE =
ZVI_GENCUSTIT-KEY_VALUE .
ZDB_GENCUSTIT-VALID_FROM =
ZVI_GENCUSTIT-VALID_FROM .
ZDB_GENCUSTIT-USERNAME =
ZVI_GENCUSTIT-USERNAME .
ZDB_GENCUSTIT-COUNTER =
ZVI_GENCUSTIT-COUNTER .
ZDB_GENCUSTIT-VALUE =
ZVI_GENCUSTIT-VALUE .
ZDB_GENCUSTIT-INACTIVE =
ZVI_GENCUSTIT-INACTIVE .
ZDB_GENCUSTIT-DESCRIPTION =
ZVI_GENCUSTIT-DESCRIPTION .
    IF SY-SUBRC = 0.
    UPDATE ZDB_GENCUSTIT ##WARN_OK.
    ELSE.
    INSERT ZDB_GENCUSTIT .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZVI_GENCUSTIT-UPD_FLAG,
STATUS_ZVI_GENCUSTIT-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ZVI_GENCUSTIT.
  SELECT SINGLE * FROM ZDB_GENCUSTIT WHERE
PURPOSE = ZVI_GENCUSTIT-PURPOSE AND
ORG_LEVEL = ZVI_GENCUSTIT-ORG_LEVEL AND
KEY_VALUE = ZVI_GENCUSTIT-KEY_VALUE AND
VALID_FROM = ZVI_GENCUSTIT-VALID_FROM AND
USERNAME = ZVI_GENCUSTIT-USERNAME AND
COUNTER = ZVI_GENCUSTIT-COUNTER .
ZVI_GENCUSTIT-MANDT =
ZDB_GENCUSTIT-MANDT .
ZVI_GENCUSTIT-PURPOSE =
ZDB_GENCUSTIT-PURPOSE .
ZVI_GENCUSTIT-ORG_LEVEL =
ZDB_GENCUSTIT-ORG_LEVEL .
ZVI_GENCUSTIT-KEY_VALUE =
ZDB_GENCUSTIT-KEY_VALUE .
ZVI_GENCUSTIT-VALID_FROM =
ZDB_GENCUSTIT-VALID_FROM .
ZVI_GENCUSTIT-USERNAME =
ZDB_GENCUSTIT-USERNAME .
ZVI_GENCUSTIT-COUNTER =
ZDB_GENCUSTIT-COUNTER .
ZVI_GENCUSTIT-VALUE =
ZDB_GENCUSTIT-VALUE .
ZVI_GENCUSTIT-INACTIVE =
ZDB_GENCUSTIT-INACTIVE .
ZVI_GENCUSTIT-DESCRIPTION =
ZDB_GENCUSTIT-DESCRIPTION .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZVI_GENCUSTIT USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZVI_GENCUSTIT-PURPOSE TO
ZDB_GENCUSTIT-PURPOSE .
MOVE ZVI_GENCUSTIT-ORG_LEVEL TO
ZDB_GENCUSTIT-ORG_LEVEL .
MOVE ZVI_GENCUSTIT-KEY_VALUE TO
ZDB_GENCUSTIT-KEY_VALUE .
MOVE ZVI_GENCUSTIT-VALID_FROM TO
ZDB_GENCUSTIT-VALID_FROM .
MOVE ZVI_GENCUSTIT-USERNAME TO
ZDB_GENCUSTIT-USERNAME .
MOVE ZVI_GENCUSTIT-COUNTER TO
ZDB_GENCUSTIT-COUNTER .
MOVE ZVI_GENCUSTIT-MANDT TO
ZDB_GENCUSTIT-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZDB_GENCUSTIT'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZDB_GENCUSTIT TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZDB_GENCUSTIT'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: ZVI_GENCUSTIT2..................................*
FORM GET_DATA_ZVI_GENCUSTIT2.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZDB_GENCUSTIT2 WHERE
(VIM_WHERETAB) .
    CLEAR ZVI_GENCUSTIT2 .
ZVI_GENCUSTIT2-MANDT =
ZDB_GENCUSTIT2-MANDT .
ZVI_GENCUSTIT2-PURPOSE =
ZDB_GENCUSTIT2-PURPOSE .
ZVI_GENCUSTIT2-ORG_LEVEL =
ZDB_GENCUSTIT2-ORG_LEVEL .
ZVI_GENCUSTIT2-KEY_VALUE =
ZDB_GENCUSTIT2-KEY_VALUE .
ZVI_GENCUSTIT2-VALID_FROM =
ZDB_GENCUSTIT2-VALID_FROM .
ZVI_GENCUSTIT2-USERNAME =
ZDB_GENCUSTIT2-USERNAME .
ZVI_GENCUSTIT2-COUNTER =
ZDB_GENCUSTIT2-COUNTER .
ZVI_GENCUSTIT2-VALUE =
ZDB_GENCUSTIT2-VALUE .
ZVI_GENCUSTIT2-INACTIVE =
ZDB_GENCUSTIT2-INACTIVE .
ZVI_GENCUSTIT2-DESCRIPTION =
ZDB_GENCUSTIT2-DESCRIPTION .
<VIM_TOTAL_STRUC> = ZVI_GENCUSTIT2.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZVI_GENCUSTIT2 .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZVI_GENCUSTIT2.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZVI_GENCUSTIT2-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZDB_GENCUSTIT2 WHERE
  PURPOSE = ZVI_GENCUSTIT2-PURPOSE AND
  ORG_LEVEL = ZVI_GENCUSTIT2-ORG_LEVEL AND
  KEY_VALUE = ZVI_GENCUSTIT2-KEY_VALUE AND
  VALID_FROM = ZVI_GENCUSTIT2-VALID_FROM AND
  USERNAME = ZVI_GENCUSTIT2-USERNAME AND
  COUNTER = ZVI_GENCUSTIT2-COUNTER .
    IF SY-SUBRC = 0.
    DELETE ZDB_GENCUSTIT2 .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZDB_GENCUSTIT2 WHERE
  PURPOSE = ZVI_GENCUSTIT2-PURPOSE AND
  ORG_LEVEL = ZVI_GENCUSTIT2-ORG_LEVEL AND
  KEY_VALUE = ZVI_GENCUSTIT2-KEY_VALUE AND
  VALID_FROM = ZVI_GENCUSTIT2-VALID_FROM AND
  USERNAME = ZVI_GENCUSTIT2-USERNAME AND
  COUNTER = ZVI_GENCUSTIT2-COUNTER .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZDB_GENCUSTIT2.
    ENDIF.
ZDB_GENCUSTIT2-MANDT =
ZVI_GENCUSTIT2-MANDT .
ZDB_GENCUSTIT2-PURPOSE =
ZVI_GENCUSTIT2-PURPOSE .
ZDB_GENCUSTIT2-ORG_LEVEL =
ZVI_GENCUSTIT2-ORG_LEVEL .
ZDB_GENCUSTIT2-KEY_VALUE =
ZVI_GENCUSTIT2-KEY_VALUE .
ZDB_GENCUSTIT2-VALID_FROM =
ZVI_GENCUSTIT2-VALID_FROM .
ZDB_GENCUSTIT2-USERNAME =
ZVI_GENCUSTIT2-USERNAME .
ZDB_GENCUSTIT2-COUNTER =
ZVI_GENCUSTIT2-COUNTER .
ZDB_GENCUSTIT2-VALUE =
ZVI_GENCUSTIT2-VALUE .
ZDB_GENCUSTIT2-INACTIVE =
ZVI_GENCUSTIT2-INACTIVE .
ZDB_GENCUSTIT2-DESCRIPTION =
ZVI_GENCUSTIT2-DESCRIPTION .
    IF SY-SUBRC = 0.
    UPDATE ZDB_GENCUSTIT2 ##WARN_OK.
    ELSE.
    INSERT ZDB_GENCUSTIT2 .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZVI_GENCUSTIT2-UPD_FLAG,
STATUS_ZVI_GENCUSTIT2-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ZVI_GENCUSTIT2.
  SELECT SINGLE * FROM ZDB_GENCUSTIT2 WHERE
PURPOSE = ZVI_GENCUSTIT2-PURPOSE AND
ORG_LEVEL = ZVI_GENCUSTIT2-ORG_LEVEL AND
KEY_VALUE = ZVI_GENCUSTIT2-KEY_VALUE AND
VALID_FROM = ZVI_GENCUSTIT2-VALID_FROM AND
USERNAME = ZVI_GENCUSTIT2-USERNAME AND
COUNTER = ZVI_GENCUSTIT2-COUNTER .
ZVI_GENCUSTIT2-MANDT =
ZDB_GENCUSTIT2-MANDT .
ZVI_GENCUSTIT2-PURPOSE =
ZDB_GENCUSTIT2-PURPOSE .
ZVI_GENCUSTIT2-ORG_LEVEL =
ZDB_GENCUSTIT2-ORG_LEVEL .
ZVI_GENCUSTIT2-KEY_VALUE =
ZDB_GENCUSTIT2-KEY_VALUE .
ZVI_GENCUSTIT2-VALID_FROM =
ZDB_GENCUSTIT2-VALID_FROM .
ZVI_GENCUSTIT2-USERNAME =
ZDB_GENCUSTIT2-USERNAME .
ZVI_GENCUSTIT2-COUNTER =
ZDB_GENCUSTIT2-COUNTER .
ZVI_GENCUSTIT2-VALUE =
ZDB_GENCUSTIT2-VALUE .
ZVI_GENCUSTIT2-INACTIVE =
ZDB_GENCUSTIT2-INACTIVE .
ZVI_GENCUSTIT2-DESCRIPTION =
ZDB_GENCUSTIT2-DESCRIPTION .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZVI_GENCUSTIT2 USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZVI_GENCUSTIT2-PURPOSE TO
ZDB_GENCUSTIT2-PURPOSE .
MOVE ZVI_GENCUSTIT2-ORG_LEVEL TO
ZDB_GENCUSTIT2-ORG_LEVEL .
MOVE ZVI_GENCUSTIT2-KEY_VALUE TO
ZDB_GENCUSTIT2-KEY_VALUE .
MOVE ZVI_GENCUSTIT2-VALID_FROM TO
ZDB_GENCUSTIT2-VALID_FROM .
MOVE ZVI_GENCUSTIT2-USERNAME TO
ZDB_GENCUSTIT2-USERNAME .
MOVE ZVI_GENCUSTIT2-COUNTER TO
ZDB_GENCUSTIT2-COUNTER .
MOVE ZVI_GENCUSTIT2-MANDT TO
ZDB_GENCUSTIT2-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZDB_GENCUSTIT2'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZDB_GENCUSTIT2 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZDB_GENCUSTIT2'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*

* base table related FORM-routines.............
INCLUDE LSVIMFTX .
